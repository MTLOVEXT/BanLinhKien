using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CHBHTH.Models;
using CHBHTH.Repositories;

namespace CHBHTH.Controllers
{
    public class GioHangController : Controller
    {
        private QLbanhang db = new QLbanhang();
		private readonly IGioHangRepository _gioHangRepository;

		public GioHangController()
		{
			_gioHangRepository = new GioHangRepository();
		}

		public List<GioHang> LayGioHang()
		{
			return _gioHangRepository.LayGioHang(Session["GioHang"]);
		}

		//Thêm giỏ hàng
		public ActionResult ThemGioHang(int iMasp, string strURL)
		{
			var sp = db.SanPhams.SingleOrDefault(n => n.MaSP == iMasp);
			if (sp == null)
			{
				Response.StatusCode = 404;
				return null;
			}

			// Thêm sản phẩm vào giỏ hàng qua repository
			_gioHangRepository.ThemGioHang(iMasp, Session);

			// Debug để kiểm tra dữ liệu
			var gioHang = Session["GioHang"] as List<GioHang>;

			return Redirect(strURL);
		}

		//Cập nhật giỏ hàng 
		public ActionResult CapNhatGioHang(int iMaSP, FormCollection f)
        {
			int soLuongMoi = int.Parse(f["txtSoLuong"]);
			// Lấy giỏ hàng từ session
			var sessionGioHang = Session["GioHang"];

			// Gọi repository để cập nhật giỏ hàng
			var gioHangRepo = new GioHangRepository();
			bool gioHangConSanPham = gioHangRepo.CapNhatGioHang(iMaSP, soLuongMoi, sessionGioHang);

			if (!gioHangConSanPham)
			{
				// Nếu giỏ hàng rỗng, chuyển hướng về trang chủ
				return RedirectToAction("Index", "Home");
			}

			// Nếu giỏ hàng còn sản phẩm, trả về view giỏ hàng đã cập nhật
			return View("GioHang", gioHangRepo.LayGioHang(sessionGioHang));
		}
		//Xóa giỏ hàng
		public ActionResult XoaGioHang(int iMaSP)
        {
			bool isGioHangEmpty = _gioHangRepository.XoaGioHang(iMaSP, Session);

			if (isGioHangEmpty)
			{
				return RedirectToAction("Index", "Home");
			}

			return RedirectToAction("GioHang");
		}
        //Xây dựng trang giỏ hàng
        public ActionResult GioHang()
        {
			var sessionData = Session["GioHang"]; // Debug tại đây

			if (sessionData == null)
			{
				return RedirectToAction("Index", "Home");
			}

			var gioHang = _gioHangRepository.LayGioHang(sessionData);
			return View(gioHang);
		}
        ////Tính tổng số lượng và tổng tiền
        ////Tính tổng số lượng
        //private int TongSoLuong()
        //{
        //    int iTongSoLuong = 0;
        //    List<GioHang> lstGioHang = Session["GioHang"] as List<GioHang>;
        //    if (lstGioHang != null)
        //    {
        //        iTongSoLuong = lstGioHang.Sum(n => n.iSoLuong);
        //    }
        //    return iTongSoLuong;
        //}
        ////Tính tổng thành tiền
        //private double TongTien()
        //{
        //    double dTongTien = 0;
        //    List<GioHang> lstGioHang = Session["GioHang"] as List<GioHang>;
        //    if (lstGioHang != null)
        //    {
        //        dTongTien = lstGioHang.Sum(n => n.ThanhTien);
        //    }
        //    return dTongTien;
        //}
        //tạo partial giỏ hàng
        public ActionResult GioHangPartial()
        {
			ViewBag.TongSoLuong = _gioHangRepository.TongSoLuong(Session["GioHang"]);
			ViewBag.TongTien = _gioHangRepository.TongTien(Session["GioHang"]);
			return PartialView();
		}
        //Xây dựng 1 view cho người dùng chỉnh sửa giỏ hàng
        public ActionResult SuaGioHang()
        {
			// Kiểm tra nếu giỏ hàng chưa tồn tại
			if (Session["GioHang"] == null)
			{
				return RedirectToAction("Index", "Home");
			}

			var gioHang = LayGioHang();
			return View(gioHang);

		}

        #region 
        //Xây dựng chức năng đặt hàng
        [HttpPost]
        public ActionResult DatHang(FormCollection donhangForm)
        {
            //Kiểm tra đăng đăng nhập
            if (Session["use"] == null || Session["use"].ToString() == "")
            {
                return RedirectToAction("Dangnhap", "User");
            }
            //Kiểm tra giỏ hàng
            if (Session["GioHang"] == null)
            {
                RedirectToAction("Index", "Home");
            }
            Console.WriteLine(donhangForm);
            string diachinhanhang = donhangForm["Diachinhanhang"].ToString();
            string thanhtoan = donhangForm["MaTT"].ToString();
            int ptthanhtoan = Int32.Parse(thanhtoan);

            //Thêm đơn hàng
            DonHang ddh = new DonHang();
            TaiKhoan kh = (TaiKhoan)Session["use"];
            List<GioHang> gh = LayGioHang();
            ddh.MaNguoiDung = kh.MaNguoiDung;
            ddh.NgayDat = DateTime.Now;
            ddh.ThanhToan = ptthanhtoan;
            ddh.DiaChiNhanHang = diachinhanhang;
            decimal tongtien = 0;
            foreach (var item in gh)
            {
                decimal thanhtien = item.iSoLuong * (decimal)item.dDonGia;
                tongtien += thanhtien;
            }
            ddh.TongTien = tongtien;
            db.DonHangs.Add(ddh);
            db.SaveChanges();
            //Thêm chi tiết đơn hàng
            foreach (var item in gh)
            {
                ChiTietDonHang ctDH = new ChiTietDonHang();
                decimal thanhtien = item.iSoLuong * (decimal)item.dDonGia;
                ctDH.MaDon = ddh.MaDon;
                ctDH.MaSP = item.iMasp;
                ctDH.SoLuong = item.iSoLuong;
                ctDH.DonGia = (decimal)item.dDonGia;
                ctDH.ThanhTien = (decimal)thanhtien;
                ctDH.PhuongThucThanhToan = 1;
                db.ChiTietDonHangs.Add(ctDH);
            }
            db.SaveChanges();
            return RedirectToAction("Index", "Donhangs");
        }
        #endregion

        public ActionResult ThanhToanDonHang()
        {

            ViewBag.MaTT = new SelectList(new[]
                {
                    new { MaTT = 1, TenPT="Thanh toán tiền mặt" },
                    new { MaTT = 2, TenPT="Thanh toán chuyển khoản" },
                }, "MaTT", "TenPT", 1);
            ViewBag.MaNguoiDung = new SelectList(db.TaiKhoans, "MaNguoiDung", "Hoten");

            //Kiểm tra đăng đăng nhập
            if (Session["use"] == null || Session["use"].ToString() == "")
            {
                return RedirectToAction("Dangnhap", "User");
            }
            //Kiểm tra giỏ hàng
            if (Session["GioHang"] == null)
            {
                RedirectToAction("Index", "Home");
            }
            //Thêm đơn hàng
            DonHang ddh = new DonHang();
            TaiKhoan kh = (TaiKhoan)Session["use"];
            List<GioHang> gh = LayGioHang();
            decimal tongtien = 0;
            foreach (var item in gh)
            {
                decimal thanhtien = item.iSoLuong * (decimal)item.dDonGia;
                tongtien += thanhtien;
            }

            ddh.MaNguoiDung = kh.MaNguoiDung;
            ddh.NgayDat = DateTime.Now;
            ChiTietDonHang ctDH = new ChiTietDonHang();
            ViewBag.tongtien = tongtien;
            return View(ddh);

        }

    }
}